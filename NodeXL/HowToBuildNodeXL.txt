
Contents
--------

This directory contains a Visual Studio 2008 solution that builds the NodeXL
system.  For a detailed list of projects in the solution, see .\ReadMe.txt.


Required Tools
--------------

1. Visual Studio 2008 SP1 or Visual Studio 2010.  NodeXL has been built and
   tested in the following environment:
   
   * Microsoft Visual Studio 2008 Professional Edition, Version 9.0.30729.1
   SP and Microsoft .NET Framework Version 3.5 SP1.

2. If you want to build the help file for the NodeXL API (NodeXLApi.chm), you
   will need the NDoc documentation tool.  See
   .\Documents\Help\Api\HowToBuildNodeXLApiHelp.txt for details


How to Build This Solution in Visual Studio 2008
------------------------------------------------

The following instructions assume that you have a Zip file that contains the
NodeXL source files.

1. Unzip the Zip file into any directory.

2. Open NodeXL\NodeXL.sln in Visual Studio.

3. Run Build | Rebuild Solution.


How to Build This Solution in Visual Studio 2010
------------------------------------------------

The following instructions assume that you have a Zip file that contains the
NodeXL source files.

1. Unzip the Zip file into any directory.

2. Make copies of the original NodeXL\ExcelTemplate\*.Designer.cs files. There
   are eight of them: Sheet1.Designer.cs, Sheet2,Designer.cs, and so on.

3. Open NodeXL.sln in Visual Studio 2010, which starts the conversion wizard.

4. Let the conversion wizard run to completion. The conversion succeeds without
   complaint, but unfortunately the *.Designer.cs files get mangled during the
   conversion.

5. Overwrite the (badly converted) *.Designer.cs files with the copies you made
   earlier.

6. Run Build | Rebuild Solution.


If You Don't Have Excel
-----------------------

The solution contains several projects that will not build if Excel 2007 or
2010 is not installed on your development machine.  They are all related to
Excel and are not required if you are not developing for Excel.

To fix the build problems on development machines that do not have Excel,
remove the following projects from the solution.  You can do this by right-
clicking each project in Solution Explorer and selecting Remove.

* All projects whose names start with "ExcelTemplate"

* NetworkServer

* UnitTests
